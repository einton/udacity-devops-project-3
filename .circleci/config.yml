version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Delete Cloudformation Stack
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} --region us-east-1

jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      - destroy_environment

  configure_infrastructure: 
    docker:
      - image: python:3.11-rc-alpine
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["0c:5c:dc:a1:28:f1:f4:bd:c6:e4:c3:c9:45:ba:ef:44"] 
      - run:
          name: Install ssh and git
          command: |
            apk add --update openssh-client git
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="http://18.234.113.82:3000/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi

workflows:
  my-workflow:
    jobs:
      - configure_infrastructure
      - smoke_test:
          requires:
            - "configure_infrastructure"

